# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.19)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget cpp-logger brahma mimir)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target cpp-logger
add_library(cpp-logger SHARED IMPORTED)

set_target_properties(cpp-logger PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/workspace/iopp/software/tailorfs/external/cpp-logger/include"
)

# Create imported target brahma
add_library(brahma SHARED IMPORTED)

set_target_properties(brahma PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/workspace/iopp/software/tailorfs/external/brahma/include"
  INTERFACE_LINK_LIBRARIES "-L/usr/workspace/iopp/software/tailorfs/reproduce/lib -lcpp-logger;gotcha;/usr/tce/packages/spectrum-mpi/ibm/spectrum-mpi-2020.08.19/lib/libmpiprofilesupport.so;/usr/tce/packages/spectrum-mpi/ibm/spectrum-mpi-2020.08.19/lib/libmpi_ibm.so"
)

# Create imported target mimir
add_library(mimir SHARED IMPORTED)

set_target_properties(mimir PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/workspace/iopp/software/tailorfs/external/mimir/include"
  INTERFACE_LINK_LIBRARIES "-L/usr/workspace/iopp/software/tailorfs/reproduce/lib -lcpp-logger;nlohmann_json::nlohmann_json;-ldl;/usr/tce/packages/spectrum-mpi/ibm/spectrum-mpi-2020.08.19/lib/libmpiprofilesupport.so;/usr/tce/packages/spectrum-mpi/ibm/spectrum-mpi-2020.08.19/lib/libmpi_ibm.so;-lpthread"
)

# Import target "cpp-logger" for configuration "RelWithDebInfo"
set_property(TARGET cpp-logger APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(cpp-logger PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/usr/workspace/iopp/software/tailorfs/reproduce/lib/libcpp-logger.so"
  IMPORTED_SONAME_RELWITHDEBINFO "libcpp-logger.so"
  )

# Import target "brahma" for configuration "RelWithDebInfo"
set_property(TARGET brahma APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(brahma PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/usr/workspace/iopp/software/tailorfs/reproduce/lib/libbrahma.so"
  IMPORTED_SONAME_RELWITHDEBINFO "libbrahma.so"
  )

# Import target "mimir" for configuration "RelWithDebInfo"
set_property(TARGET mimir APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(mimir PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/usr/workspace/iopp/software/tailorfs/reproduce/lib/libmimir.so"
  IMPORTED_SONAME_RELWITHDEBINFO "libmimir.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
